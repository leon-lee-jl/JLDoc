C++ Lauguage
==================

C++融合了3种不同的编程传统:
    *    C语言代表的过程性语言传统
    *    在C上添加的以类为代表的面向对象语言传统
    *    C++模板支持的通用编程传统（generic programming）

编程主要是两个方面：数据和算法。结构化编程的C语言强调算法，OOP的C++强调数据。

程序中，main函数由启动代码调用，而启动代码是由编译器插入程序的。

头文件作用是通过名称来标识文件类型。C中头文件以.h结尾，而C++中头文件无后缀名。C中定义常量用#define，C++中用const。

C++中的结构体声明时可以省略关键字struct。和C中结构不同，C++中的结构可以允许有成员函数。结构体的位字段，在成员变量类型后面加“：3”，表明改成员变量占的位数。

共用体：样子和结构体相同，但其在内存中的存储大小为成员变量中最大的那个类型的占用大小，而结构体为所有成员变量内存占用大小的总和，公用体每次只能存储一个值，用途是当数据项使用多种类型时，可以节省内存空间。

枚举类型：其数值默认从0开始，后一个默认是前一个加1。枚举类型可提升为整型，但整型不能转化为枚举型。

指针：一定要在指针应用解除操作符（*）前，将指针初始化一个确定的、适当的地址。指针加1表示指向下一个元素。

使用new init(或其他数据类型)来分配内存，delete加变量名来销毁内存。使用new创建的数据类型，只在运行时才会分配内存（dynamic binding），相比原始声明的方式（编译时就分配内存--静态联编，static binding）要节省内存。注意事项：
    *    不要使用delete来释放不是new分配的内存
    *    不要使用delete释放同一内存块两次
    *    如果使用new [] 为数组分配内存，则应使用delete[]来释放
    *    如果使用new [] 为一个实体分配内存，则应使用delete（没有方括号）来释放
    *    对空值指针应用delete是安全的*

当new一个结构体时，使用"->"来访问结构体成员。

using namespace 是为了调用不同厂商已有的代码而设计的。

在使用Unicode和ISO 10646编码时要注意使用wchat_t这种数据类型。

C++ 复合数据类型：
    *    char a[2] = {'a', 'b'};

C++中使用String类替代传统字符串数组的表示方法，string的拼接用“+”号，string类的常用方法：
    *    strcpy(a, b), 将b复制到a
    *    strcat(a, b), 将b追加到a

C++中逗号表达式的值为第二部分的值。非零值为true，零值为false。
